/*
Azure IPAM

 Azure IPAM is a lightweight solution developed on top of the Azure platform designed to help Azure customers manage their enterprise IP Address space easily and effectively. 

API version: 3.4.0
Contact: ipam@microsoft.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"fmt"
)


// ResponseAvailableBlockNetsApiSpacesSpaceBlocksBlockAvailableGet struct for ResponseAvailableBlockNetsApiSpacesSpaceBlocksBlockAvailableGet
type ResponseAvailableBlockNetsApiSpacesSpaceBlocksBlockAvailableGet struct {
	ArrayOfNetworkExpand *[]NetworkExpand
	ArrayOfString *[]string
}

// Unmarshal JSON data into any of the pointers in the struct
func (dst *ResponseAvailableBlockNetsApiSpacesSpaceBlocksBlockAvailableGet) UnmarshalJSON(data []byte) error {
	var err error
	// try to unmarshal JSON data into ArrayOfNetworkExpand
	err = json.Unmarshal(data, &dst.ArrayOfNetworkExpand);
	if err == nil {
		jsonArrayOfNetworkExpand, _ := json.Marshal(dst.ArrayOfNetworkExpand)
		if string(jsonArrayOfNetworkExpand) == "{}" { // empty struct
			dst.ArrayOfNetworkExpand = nil
		} else {
			return nil // data stored in dst.ArrayOfNetworkExpand, return on the first match
		}
	} else {
		dst.ArrayOfNetworkExpand = nil
	}

	// try to unmarshal JSON data into ArrayOfString
	err = json.Unmarshal(data, &dst.ArrayOfString);
	if err == nil {
		jsonArrayOfString, _ := json.Marshal(dst.ArrayOfString)
		if string(jsonArrayOfString) == "{}" { // empty struct
			dst.ArrayOfString = nil
		} else {
			return nil // data stored in dst.ArrayOfString, return on the first match
		}
	} else {
		dst.ArrayOfString = nil
	}

	return fmt.Errorf("data failed to match schemas in anyOf(ResponseAvailableBlockNetsApiSpacesSpaceBlocksBlockAvailableGet)")
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src *ResponseAvailableBlockNetsApiSpacesSpaceBlocksBlockAvailableGet) MarshalJSON() ([]byte, error) {
	if src.ArrayOfNetworkExpand != nil {
		return json.Marshal(&src.ArrayOfNetworkExpand)
	}

	if src.ArrayOfString != nil {
		return json.Marshal(&src.ArrayOfString)
	}

	return nil, nil // no data in anyOf schemas
}


type NullableResponseAvailableBlockNetsApiSpacesSpaceBlocksBlockAvailableGet struct {
	value *ResponseAvailableBlockNetsApiSpacesSpaceBlocksBlockAvailableGet
	isSet bool
}

func (v NullableResponseAvailableBlockNetsApiSpacesSpaceBlocksBlockAvailableGet) Get() *ResponseAvailableBlockNetsApiSpacesSpaceBlocksBlockAvailableGet {
	return v.value
}

func (v *NullableResponseAvailableBlockNetsApiSpacesSpaceBlocksBlockAvailableGet) Set(val *ResponseAvailableBlockNetsApiSpacesSpaceBlocksBlockAvailableGet) {
	v.value = val
	v.isSet = true
}

func (v NullableResponseAvailableBlockNetsApiSpacesSpaceBlocksBlockAvailableGet) IsSet() bool {
	return v.isSet
}

func (v *NullableResponseAvailableBlockNetsApiSpacesSpaceBlocksBlockAvailableGet) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableResponseAvailableBlockNetsApiSpacesSpaceBlocksBlockAvailableGet(val *ResponseAvailableBlockNetsApiSpacesSpaceBlocksBlockAvailableGet) *NullableResponseAvailableBlockNetsApiSpacesSpaceBlocksBlockAvailableGet {
	return &NullableResponseAvailableBlockNetsApiSpacesSpaceBlocksBlockAvailableGet{value: val, isSet: true}
}

func (v NullableResponseAvailableBlockNetsApiSpacesSpaceBlocksBlockAvailableGet) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableResponseAvailableBlockNetsApiSpacesSpaceBlocksBlockAvailableGet) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


