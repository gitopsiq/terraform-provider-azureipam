/*
Azure IPAM

 Azure IPAM is a lightweight solution developed on top of the Azure platform designed to help Azure customers manage their enterprise IP Address space easily and effectively. 

API version: 3.4.0
Contact: ipam@microsoft.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the Reservation type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Reservation{}

// Reservation DOCSTRING
type Reservation struct {
	Id string `json:"id"`
	Cidr string `json:"cidr"`
	Desc NullableString `json:"desc,omitempty"`
	CreatedOn float32 `json:"createdOn"`
	CreatedBy string `json:"createdBy"`
	SettledOn NullableFloat32 `json:"settledOn,omitempty"`
	SettledBy NullableString `json:"settledBy,omitempty"`
	Status string `json:"status"`
}

type _Reservation Reservation

// NewReservation instantiates a new Reservation object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewReservation(id string, cidr string, createdOn float32, createdBy string, status string) *Reservation {
	this := Reservation{}
	this.Id = id
	this.Cidr = cidr
	this.CreatedOn = createdOn
	this.CreatedBy = createdBy
	this.Status = status
	return &this
}

// NewReservationWithDefaults instantiates a new Reservation object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewReservationWithDefaults() *Reservation {
	this := Reservation{}
	return &this
}

// GetId returns the Id field value
func (o *Reservation) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *Reservation) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *Reservation) SetId(v string) {
	o.Id = v
}

// GetCidr returns the Cidr field value
func (o *Reservation) GetCidr() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Cidr
}

// GetCidrOk returns a tuple with the Cidr field value
// and a boolean to check if the value has been set.
func (o *Reservation) GetCidrOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Cidr, true
}

// SetCidr sets field value
func (o *Reservation) SetCidr(v string) {
	o.Cidr = v
}

// GetDesc returns the Desc field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Reservation) GetDesc() string {
	if o == nil || IsNil(o.Desc.Get()) {
		var ret string
		return ret
	}
	return *o.Desc.Get()
}

// GetDescOk returns a tuple with the Desc field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Reservation) GetDescOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Desc.Get(), o.Desc.IsSet()
}

// HasDesc returns a boolean if a field has been set.
func (o *Reservation) HasDesc() bool {
	if o != nil && o.Desc.IsSet() {
		return true
	}

	return false
}

// SetDesc gets a reference to the given NullableString and assigns it to the Desc field.
func (o *Reservation) SetDesc(v string) {
	o.Desc.Set(&v)
}
// SetDescNil sets the value for Desc to be an explicit nil
func (o *Reservation) SetDescNil() {
	o.Desc.Set(nil)
}

// UnsetDesc ensures that no value is present for Desc, not even an explicit nil
func (o *Reservation) UnsetDesc() {
	o.Desc.Unset()
}

// GetCreatedOn returns the CreatedOn field value
func (o *Reservation) GetCreatedOn() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.CreatedOn
}

// GetCreatedOnOk returns a tuple with the CreatedOn field value
// and a boolean to check if the value has been set.
func (o *Reservation) GetCreatedOnOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedOn, true
}

// SetCreatedOn sets field value
func (o *Reservation) SetCreatedOn(v float32) {
	o.CreatedOn = v
}

// GetCreatedBy returns the CreatedBy field value
func (o *Reservation) GetCreatedBy() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CreatedBy
}

// GetCreatedByOk returns a tuple with the CreatedBy field value
// and a boolean to check if the value has been set.
func (o *Reservation) GetCreatedByOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedBy, true
}

// SetCreatedBy sets field value
func (o *Reservation) SetCreatedBy(v string) {
	o.CreatedBy = v
}

// GetSettledOn returns the SettledOn field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Reservation) GetSettledOn() float32 {
	if o == nil || IsNil(o.SettledOn.Get()) {
		var ret float32
		return ret
	}
	return *o.SettledOn.Get()
}

// GetSettledOnOk returns a tuple with the SettledOn field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Reservation) GetSettledOnOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return o.SettledOn.Get(), o.SettledOn.IsSet()
}

// HasSettledOn returns a boolean if a field has been set.
func (o *Reservation) HasSettledOn() bool {
	if o != nil && o.SettledOn.IsSet() {
		return true
	}

	return false
}

// SetSettledOn gets a reference to the given NullableFloat32 and assigns it to the SettledOn field.
func (o *Reservation) SetSettledOn(v float32) {
	o.SettledOn.Set(&v)
}
// SetSettledOnNil sets the value for SettledOn to be an explicit nil
func (o *Reservation) SetSettledOnNil() {
	o.SettledOn.Set(nil)
}

// UnsetSettledOn ensures that no value is present for SettledOn, not even an explicit nil
func (o *Reservation) UnsetSettledOn() {
	o.SettledOn.Unset()
}

// GetSettledBy returns the SettledBy field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Reservation) GetSettledBy() string {
	if o == nil || IsNil(o.SettledBy.Get()) {
		var ret string
		return ret
	}
	return *o.SettledBy.Get()
}

// GetSettledByOk returns a tuple with the SettledBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Reservation) GetSettledByOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.SettledBy.Get(), o.SettledBy.IsSet()
}

// HasSettledBy returns a boolean if a field has been set.
func (o *Reservation) HasSettledBy() bool {
	if o != nil && o.SettledBy.IsSet() {
		return true
	}

	return false
}

// SetSettledBy gets a reference to the given NullableString and assigns it to the SettledBy field.
func (o *Reservation) SetSettledBy(v string) {
	o.SettledBy.Set(&v)
}
// SetSettledByNil sets the value for SettledBy to be an explicit nil
func (o *Reservation) SetSettledByNil() {
	o.SettledBy.Set(nil)
}

// UnsetSettledBy ensures that no value is present for SettledBy, not even an explicit nil
func (o *Reservation) UnsetSettledBy() {
	o.SettledBy.Unset()
}

// GetStatus returns the Status field value
func (o *Reservation) GetStatus() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *Reservation) GetStatusOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *Reservation) SetStatus(v string) {
	o.Status = v
}

func (o Reservation) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Reservation) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["cidr"] = o.Cidr
	if o.Desc.IsSet() {
		toSerialize["desc"] = o.Desc.Get()
	}
	toSerialize["createdOn"] = o.CreatedOn
	toSerialize["createdBy"] = o.CreatedBy
	if o.SettledOn.IsSet() {
		toSerialize["settledOn"] = o.SettledOn.Get()
	}
	if o.SettledBy.IsSet() {
		toSerialize["settledBy"] = o.SettledBy.Get()
	}
	toSerialize["status"] = o.Status
	return toSerialize, nil
}

func (o *Reservation) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
		"cidr",
		"createdOn",
		"createdBy",
		"status",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varReservation := _Reservation{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varReservation)

	if err != nil {
		return err
	}

	*o = Reservation(varReservation)

	return err
}

type NullableReservation struct {
	value *Reservation
	isSet bool
}

func (v NullableReservation) Get() *Reservation {
	return v.value
}

func (v *NullableReservation) Set(val *Reservation) {
	v.value = val
	v.isSet = true
}

func (v NullableReservation) IsSet() bool {
	return v.isSet
}

func (v *NullableReservation) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableReservation(val *Reservation) *NullableReservation {
	return &NullableReservation{value: val, isSet: true}
}

func (v NullableReservation) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableReservation) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


